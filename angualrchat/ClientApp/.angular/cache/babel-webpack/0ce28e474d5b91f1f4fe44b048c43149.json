{"ast":null,"code":"import * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servicios/UserController.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../servicios/signalrcustom.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction MensajesComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.mymessages(msg_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(msg_r2.UserName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(msg_r2.Mensaje);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.parseDate(msg_r2.CreatedDate));\n  }\n}\n\nfunction MensajesComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, MensajesComponent_div_6_div_1_Template, 7, 4, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.mensajes);\n  }\n}\n\nexport let MensajesComponent = /*#__PURE__*/(() => {\n  class MensajesComponent {\n    constructor(usercontroller, http, sender, cdr) {\n      this.usercontroller = usercontroller;\n      this.http = http;\n      this.sender = sender;\n      this.cdr = cdr;\n      this.mensaje = {\n        IdUser: \"\",\n        Mensaje: \"\",\n        UserName: \"\",\n        CreatedDate: new Date()\n      };\n      this.mensajes = [];\n\n      if (usercontroller.isAuth) {\n        this.fetchOnInit();\n      }\n    }\n\n    ngOnInit() {\n      this.scrollChat();\n      this.sender.emNotifica.subscribe(value => {\n        if (value) {\n          if (value.Mensaje != '') this.mensajes.push(value);\n          this.scrollChat();\n        } //verifica si hay un cambio en la data para renderizar el nuevo cambio\n\n\n        setInterval(() => {\n          this.cdr.detectChanges();\n        }, 500);\n      });\n    }\n    /*\r\n      guarda el mensaje en la base de datos\r\n    */\n\n\n    submit() {\n      if (this.mensaje.Mensaje == '') {\n        alert(\"Cant send empty message\");\n        return;\n      }\n\n      this.mensaje.IdUser = this.usercontroller.Token;\n      this.mensaje.UserName = this.usercontroller.UserName;\n      this.mensaje.CreatedDate = new Date();\n      let url = \"/api/MensajeDbs\";\n      this.http.post(url, this.mensaje).subscribe(res => {\n        this.emmitMensaje();\n      });\n    }\n    /*\r\n      envia el mensaje a todos los usuarios loggeados\r\n    */\n\n\n    emmitMensaje() {\n      let url = \"/api/sender\"; //url = \"https://jesuschat.azurewebsites.net/api/sender\"\n\n      this.http.post(url, this.mensaje).subscribe(res => {\n        this.mensaje.Mensaje = '';\n        this.scrollChat();\n      });\n    }\n    /*\r\n      busca el elem chat en el html y hace scroll hasta el ultimo mensaje\r\n    */\n\n\n    scrollChat() {\n      var chat = document.getElementById(\"chat\");\n      setTimeout(() => {\n        chat.scrollTo({\n          behavior: \"smooth\",\n          top: chat.scrollHeight\n        });\n      }, 300);\n    }\n    /*\r\n      Para buscar todos los mensajes\r\n    */\n\n\n    fetchOnInit() {\n      let url = \"/api/MensajeDbs\";\n      this.http.get(url, {\n        params: {\n          Token: this.usercontroller.Token\n        }\n      }).subscribe(res => {\n        //this.mensajes\n        if (res.length > 0) {\n          this.mensajes = res.reverse();\n          this.scrollChat();\n        }\n      });\n    }\n    /*\r\n      Para darle estilo a los mensajes en el html\r\n      Si el mensaje del usuario es igual su username ... el mensaje se muestra a la derecha en color azul\r\n      de lo contrario ... el mensaje va a la izquierda en color gris\r\n    */\n\n\n    mymessages(value) {\n      if (value.UserName == this.usercontroller.UserName) {\n        return 'self-end text-white bg-blue-400';\n      }\n\n      return 'self-start text-white bg-slate-400';\n    }\n\n    parseDate(date) {\n      return moment(date).format(\"hh:mm a\");\n    }\n\n  }\n\n  MensajesComponent.ɵfac = function MensajesComponent_Factory(t) {\n    return new (t || MensajesComponent)(i0.ɵɵdirectiveInject(i1.UserControllerService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.SignalrcustomService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  MensajesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MensajesComponent,\n    selectors: [[\"app-mensajes\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[1, \"p-3\", \"bg-white\", \"rounded-md\", \"mt-3\", 2, \"height\", \"400px\"], [\"id\", \"chat\", 1, \"p-3\", \"bg-slate-100\", 2, \"height\", \"300px\", \"overflow\", \"auto\"], [\"class\", \"flex flex-col gap-2\", 4, \"ngIf\"], [1, \"flex\", \"items-center\", \"gap-2\", \"mt-2\"], [1, \"bg-white\", \"border\", \"rounded-md\", \"w-full\", \"px-3\", \"py-1\", 3, \"ngModel\", \"ngModelChange\", \"keydown.enter\"], [1, \"bg-green-500\", \"rounded-md\", \"text-white\", \"px-3\", \"py-1\", \"flex\", \"items-center\", 3, \"click\"], [1, \"flex\", \"flex-col\", \"gap-2\"], [\"class\", \" px-3 py-1  rounded-md flex flex-col\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"px-3\", \"py-1\", \"rounded-md\", \"flex\", \"flex-col\", 3, \"ngClass\"], [1, \"text-xs\"], [1, \"\"], [1, \"text-xs\", \"mt-1\", \"text-right\"]],\n    template: function MensajesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Welcome \");\n        i0.ɵɵelementStart(2, \"b\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 0);\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵtemplate(6, MensajesComponent_div_6_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function MensajesComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.mensaje.Mensaje = $event;\n        })(\"keydown.enter\", function MensajesComponent_Template_input_keydown_enter_8_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function MensajesComponent_Template_button_click_9_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(10, \"Send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.usercontroller.UserName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.mensajes.length > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.mensaje.Mensaje);\n      }\n    },\n    directives: [i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i4.NgForOf, i4.NgClass],\n    styles: [\"\"]\n  });\n  return MensajesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}